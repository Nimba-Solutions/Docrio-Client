{
    "openapi": "3.0.3",
    "info": {
        "description": "The Docrio API can be used to build integrations with your organization's dedicated Docrio account.\n\n# **Prerequisites**\n\n- You must have installed the Docrio package in your Salesforce organization and completed the setup process.\n- You must [obtain a Salesforce access token for your Salesforce organization\r\n            ](https: //help.salesforce.com/s/articleView?id=xcloud.remoteaccess_oauth_flows.htm&type=5). Include the access token in the Authorization header of your requests with the value `Bearer <access_token>` where `<access_token>` is the value of the access token.\n- You must [obtain a Docrio API Key](https://litify-central.my.site.com/community/s/api-key-request). Include the API key in the `X-API-KEY` header of your requests with the value of the key.\n- You must use your organization's dedicated Docrio API URL when making requests to Docrio. You can [find your organization's dedicated Docrio API URL using the Docrio Setup API documentation](./setup).\n\n# **Authentication**\nWhen making calls to the Docrio API, you must include both a valid access token and a valid API key. For example:\n```\ncurl -i -X GET 'https://api.000000000000.genesisapi.com/v1/files?Ids=a1E1U000001juz6UAA' \\\n-H 'Authorization: Bearer $SALESFORCE_ACCESS_TOKEN' \\\n-H 'X-API-KEY: $DOCRIO_API_KEY'\n```\n<br />\nIf this succeeds, you will get a 200 OK response:\n```\nHTTP/2 200\ncontent-type: application/json\ncontent-length: 14\ndate: Thu, 22 May 2025 20:35:03 GMT\n...\n\n{\"Records\":[]}\n```\n<br />\nIf you do not include the access token, you will get a 401 Unauthorized error:\n```\nHTTP/2 401\ncontent-type: application/json\ncontent-length: 26\ndate: Thu, 22 May 2025 19:18:35 GMT\n...\n\n{\"message\":\"Unauthorized\"}\n```\n<br />\nIf your access key or API key is invalid, you will get a 403 Forbidden error:\n```\nHTTP/2 403\ncontent-type: application/json\ncontent-length: 82\ndate: Thu, 22 May 2025 19:23:40 GMT\n...\n{\"message\":\"User is not authorized to access this resource with an explicit deny\"}\n```\n<br />\nYou should test with both **valid** and **invalid** API keys to confirm your implementation is correct:\n- A call with a valid access token and a **valid** API key should return a 200 OK response.\n- A call with a valid access token and an **invalid** API key should return a 403 Forbidden error.\n\nIf you get back a different response for either of these cases, you need to fix your implementation.\n",
        "version": "v1",
        "title": "Docrio API",
        "contact": {
            "name": "Support",
            "url": "https://help.litify.com/hc/categories/360005564233-Docrio",
            "email": "docrio-help@litify.com"
        }
    },
    "servers": [
        {
            "url": "https://{YourDocrioUrl}",
            "variables": {
                "YourDocrioUrl": {
                    "default": "api.000000000000.genesisapi.com/v1",
                    "description": "Your Docrio API URL. You can [find your Docrio API URL using the Setup API documentation](https://app.swaggerhub.com/apis-docs/Docrio/SetupAPI/v1).\n"
                }
            }
        }
    ],
    "tags": [
        {
            "name": "Archival Tool",
            "description": "Archive your Docrio files"
        },
        {
            "name": "File Management",
            "description": "Manage your Docrio files",
            "externalDocs": {
                "description": "More",
                "url": "https://help.litify.com/hc/en-us/sections/360010476134-Docrio"
            }
        },
        {
            "name": "Document Generation",
            "description": "Generate documents from templates",
            "externalDocs": {
                "description": "More",
                "url": "https://help.litify.com/hc/en-us/sections/360007647374-Document-Generation"
            }
        },
        {
            "name": "Sharing Management",
            "description": "Manage file shares",
            "externalDocs": {
                "description": "More",
                "url": "https://help.litify.com/hc/en-us/articles/360047547593-External-Links"
            }
        },
        {
            "name": "Sharing",
            "description": "Access shared files",
            "externalDocs": {
                "description": "More",
                "url": "https://help.litify.com/hc/en-us/articles/360047547593-External-Links"
            }
        }
    ],
    "security": [
        {
            "SalesforceAccessToken": [],
            "X-API-Key": []
        }
    ],
    "paths": {
        "/archive": {
            "post": {
                "tags": [
                    "Archival Tool"
                ],
                "summary": "Archive files by file info or record id",
                "description": "This endpoint can be used to archive multiple files or records using file info id or document related to.\nEither the FileInfoIds or RecordIds parameter in the request body must be populated. The IncludeChildRecords parameter is only considered when archiving by record.\n\nThe response will return an externalJobId that can be used to track job updates using the /archive/status endpoint.\n\n**Note: The maximum number of FileInfoIds that can be included is 250,000. The maximum number of RecordIds that can be included is 50,000.\n**Additional Note: Filing Cabinet and DocAssign cannot be included in the RecordIds list\n",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ArchivePostRequest"
                            }
                        }
                    },
                    "description": "Array of either FileInfoIds or RecordIds the user would like to archive."
                },
                "responses": {
                    "207": {
                        "description": "Archive job has been kicked off for the given request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ArchivePostResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request body parameters are invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/responses/BadRequest"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "Request entity too large"
                    },
                    "500": {
                        "description": "Error occurred while processing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/schemas/ErrorMessageResponseWithFailReason"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/archive/restore": {
            "post": {
                "tags": [
                    "Archival Tool"
                ],
                "summary": "Restore archived files by file info or record id",
                "description": "This endpoint can be used to restore multiple files or records using file info id or document related to.\nEither the FileInfoIds or RecordIds parameter in the request body must be populated. The IncludeChildRecords parameter is only considered when archiving by record.\n\nThe response will return an externalJobId that can be used to track job updates using the /archive/restore/status endpoint.\n\n**Note:** The maximum number of FileInfoIds that can be included is 250,000. The maximum number of RecordIds that can be included is 50,000.\n*Additional Note: Filing Cabinet and DocAssign cannot be included in the RecordIds list*\n",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ArchivePostRequest"
                            }
                        }
                    },
                    "description": "Array of either FileInfoIds or RecordIds the user would like to archive."
                },
                "responses": {
                    "207": {
                        "description": "Restore job has been kicked off for the given request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ArchivePostResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request body parameters are invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/responses/BadRequest"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "Request entity too large"
                    },
                    "500": {
                        "description": "Error occurred while processing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/schemas/ErrorMessageResponseWithFailReason"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/archive/status/{externalJobId}": {
            "get": {
                "tags": [
                    "Archival Tool"
                ],
                "summary": "Get the status of an existing archive job",
                "description": "This endpoint can be used to retrieve the status of an existing archive job by providing the externalJobId as a path parameter.\n",
                "responses": {
                    "200": {
                        "description": "The archive job status and results, once the job completes.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ArchiveStatusGetResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/InvalidJobDetails"
                    }
                }
            }
        },
        "/archive/restore/status/{externalJobId}": {
            "get": {
                "tags": [
                    "Archival Tool"
                ],
                "summary": "Get the status of an existing restore job",
                "description": "This endpoint can be used to retrieve the status of an existing restore job by providing the externalJobId as a path parameter.\n",
                "responses": {
                    "200": {
                        "description": "The restore job status and results, once the job completes.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ArchiveStatusGetResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/InvalidJobDetails"
                    }
                }
            }
        },
        "/files": {
            "get": {
                "tags": [
                    "File Management"
                ],
                "summary": "Download files",
                "description": "This endpoint can be used to download files from Docrio.\nThe response includes a collection of URLs that can be used to download the requested files.\n\n**Downloading a single file (latest version):** specify the Id of the file in the `Id` query parameter\n\n**Downloading a single file (specific version):** specify the Id of the file in the `Id` query parameter, and the version of the file in the `VersionId` query parameter.\n\n**Downloading multiple files (latest versions):** specify the Ids of the files in the `Ids` query parameter as a comma-separated list\n\n*Note: download URLs expire after 5 minutes*\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ListOfFileInfoIdsOptional"
                    },
                    {
                        "$ref": "#/components/parameters/FileInfoIdOptional"
                    },
                    {
                        "$ref": "#/components/parameters/VersionIdOptional"
                    },
                    {
                        "$ref": "#/components/parameters/FileNameOptional"
                    },
                    {
                        "$ref": "#/components/parameters/IsArchived"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The collection of download URLs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FilesGetResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/NoSalesforcePermission"
                    }
                }
            },
            "delete": {
                "tags": [
                    "File Management"
                ],
                "summary": "Marks one or more file records for deletion.",
                "description": "Providing an array of salesforce record ids, all salesforce record ids will be marked for deletion and no longer available for any request.\nThere is a maximum of 100 salesforce record ids per request.\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ListOfFileInfoIds"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted the specified salesforce file record ids - any failures will be returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FilesDeleteResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    }
                }
            },
            "patch": {
                "tags": [
                    "File Management"
                ],
                "summary": "Updates field values on an existing file record without also making a corresponding change to the underlying file.",
                "description": "Providing any data that is found in a file record, will update the file record with the new data. However, RelatedRecordId can not be updated, the MOVE endpoint must be used to update a RelatedRecordId.\nOnly a salesforce file record id is required.\n",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FilesPatchRequest"
                            }
                        }
                    },
                    "description": "JSON object containing values to update on the file record - only id is required."
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated file record.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FilesPatchResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    }
                }
            },
            "put": {
                "tags": [
                    "File Management"
                ],
                "summary": "Creates a version of a specified file.",
                "description": "Providing a single salesforce file record id, a signed url will be created for a new version of that file.\nThe signed url is valid for 5 minutes and can be used to upload the file.\n",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FilesPutRequest"
                            }
                        }
                    },
                    "description": "Salesforce file record id of the file you want to version."
                },
                "responses": {
                    "200": {
                        "description": "A signed url was created for the provided salesforce file record id.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FilesPutResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    },
                    "403": {
                        "description": "You have reached the maximum number of versions for this file.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/BadRequest"
                    }
                }
            },
            "post": {
                "tags": [
                    "File Management"
                ],
                "summary": "Creates multiple or single salesforce file record ids and return signed urls.",
                "description": "Providing single or multiple file names, a salesforce file record id and signed url will be created for each file name provided.\nThe response will be the original file name provided in the request mapped to an object containing that files signed url information and salesforce file record id.\nThe signed url is valid for 5 minutes and can be used to upload the file.\n",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FilesPostRequest"
                            }
                        }
                    },
                    "description": "JSON array containing objects that map Name to the name of the file that is being uploaded."
                },
                "responses": {
                    "200": {
                        "description": "Salesforce file record ids and signed urls were created for all provided file names. The file name provided in request maps to its corresponding signed url and salesforce file record id.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FilesPostResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    }
                }
            }
        },
        "/files/ta": {
            "tags": [
                "File Management"
            ],
            "summary": "Creates multiple or single salesforce file record ids and return signed urls.",
            "description": "Providing single or multiple file names, a salesforce file record id and signed url will be created for each file name provided using transfer accelerator.\nThe response will be the original file name provided in the request mapped to an object containing that files signed url information and salesforce file record id.\nThe signed url is valid for 5 minutes and can be used to upload the file.\n",
            "requestBody": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/FilesTAPostRequest"
                        }
                    }
                },
                "description": "JSON array containing objects that map Name to the name of the file that is being uploaded."
            },
            "responses": {
                "200": {
                    "description": "This endpoint is for generating signed urls using transfer acceleration. Salesforce file record ids and signed urls were created for all provided file names. The file name provided in request maps to its corresponding signed url and salesforce file record id.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FilesTAPostResponse"
                            }
                        }
                    }
                },
                "400": {
                    "$ref": "#/components/responses/BadRequest"
                },
                "401": {
                    "$ref": "#/components/responses/NotAuthorized"
                }
            }
        },
        "/files/associates": {
            "post": {
                "tags": [
                    "File Management"
                ],
                "summary": "Creates multiple or single file relationships to signify whether pairs of files should be viewed or managed together.",
                "description": "Providing single or multiple file relationship pairs, a file relationship will be created for each pair provided.\nThe response will return a 201 status code for a successful submission.\n",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FilesAssociatePostRequest"
                            }
                        }
                    },
                    "description": "JSON array containing objects that map a file to another file to create a relationship between the pair."
                },
                "responses": {
                    "201": {
                        "description": "File relationships were created for all provided files.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FilesAssociatePostResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "File not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessageResponseWithFailReason"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "File Management"
                ],
                "summary": "Marks one or more file relationships for deletion.",
                "description": "Providing an array of salesforce file relationships, all provided salesforce file relationships will be deleted.\nThere is a maximum of 100 salesforce file relationships per request.\n",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FilesAssociateDeleteRequest"
                            }
                        }
                    },
                    "description": "JSON array containing objects that map a file to another file to delete a relationship between the pair."
                },
                "responses": {
                    "204": {
                        "description": "Successfully deleted the specified salesforce file relationships."
                    }
                }
            }
        },
        "/files/info": {
            "get": {
                "tags": [
                    "File Management"
                ],
                "summary": "Returns an array file records for the specified salesforce file record ids.",
                "description": "Providing a list of salesforce file record ids, an array of file records will be returned.\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ListOfFileInfoIds"
                    },
                    {
                        "$ref": "#/components/parameters/IsArchived"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully returned a file record for the specified salesforce file record id.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FilesInfoGetResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    }
                }
            }
        },
        "/files/complete": {
            "post": {
                "tags": [
                    "File Management"
                ],
                "summary": "Must be called after a file has been successfully uploaded.",
                "description": "After a file has been successfully uploaded using a SignedUrl, this call must be made to get metadata on the file and insert it into salesforce.\n",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FilesCompletePostRequest"
                            }
                        }
                    },
                    "description": "JSON object containing property Ids that is mapped to an array of salesforce file record ids that need to be marked as complete. Optionally, you can provide a CheckIn boolean parameter to either check in or leave the file(s) checked out. If not provided, the default is to check in the file(s). The CheckIn value applies to all files in the request."
                },
                "responses": {
                    "201": {
                        "description": "Files have been successfully marked as complete in salesforce.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FilesCompletePostResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/NoSalesforcePermission"
                    }
                }
            }
        },
        "/files/related": {
            "get": {
                "tags": [
                    "File Management"
                ],
                "summary": "Returns a list of file records which are related to the specified related salesforce record id or to one of its child records.",
                "description": "Providing a related salesforce record id, an array will be returned containing all file records related to that id.\n",
                "parameters": [
                    {
                        "in": "query",
                        "name": "RelatedRecordId",
                        "description": "A single related salesforce record id.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "a1E1U000001juz6UAA"
                        }
                    },
                    {
                        "in": "query",
                        "name": "SortBy",
                        "description": "Salesforce field to sort files by. When SortBy or SortDirection is blank this defaults to \"Name\".",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Name"
                        }
                    },
                    {
                        "in": "query",
                        "name": "SortDirection",
                        "description": "Sort direction, ASC or DESC. When SortBy or SortDirection is blank this defaults to \"ASC\".",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "ASC"
                        }
                    },
                    {
                        "in": "query",
                        "name": "OffsetId",
                        "description": "Used for pagination, Id of the last file in the previous collection. OffsetId and OffsetValue should be used together.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "a1E1U000001juz6UAA"
                        }
                    },
                    {
                        "in": "query",
                        "name": "OffsetValue",
                        "description": "Used for pagination, SortBy field's value of the last file in the previous collection. OffsetId and OffsetValue should be used together.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "CoolFile.word"
                        }
                    },
                    {
                        "in": "query",
                        "name": "IncludeRelated",
                        "description": "If true, we return files from child records of the related record. Setting to false can improve performance on large datasets.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "example": true
                        }
                    },
                    {
                        "in": "query",
                        "name": "MaxFiles",
                        "description": "Used to set number of files to return",
                        "required": false,
                        "schema": {
                            "type": "int",
                            "example": 2000.0
                        }
                    },
                    {
                        "in": "query",
                        "name": "Fields",
                        "description": "A comma-separated list of file info fields to return.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "OwnerId,litify_docs__Author__c"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/IsArchived"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully returned an array of all related records.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FilesRelatedGetResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    }
                }
            }
        },
        "/files/restore": {
            "post": {
                "tags": [
                    "File Management"
                ],
                "summary": "Restores one or more soft-deleted file info records.",
                "description": "Restores one or more soft-deleted file info records. A maximum of 100 file info ids can be provided per request.\n",
                "parameters": [
                    {
                        "in": "query",
                        "name": "Ids",
                        "description": "A comma-separated list of file info ids to restore.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "a1E1U000001juz6UAA, a1E1U000001juz6UAB"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successfully processed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FilesRestoreResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/NotAuthorized"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessageResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/files/share": {
            "post": {
                "tags": [
                    "File Management"
                ],
                "summary": "Toggles the client portal share status of one or more files.",
                "description": "Will share/unshare a subset of files to/from the client portal in Salesforce based on the value of the `share` parameter.\n",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FilesShareRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Files were shared/unshared to client portal."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "500": {
                        "description": "Error while processing request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessageResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/files/checkout": {
            "post": {
                "tags": [
                    "File Management"
                ],
                "summary": "Checks out files.",
                "description": "Allows the user to \"check out\" one or more files from Docrio by providing a list of salesforce file Ids.\nIn order to check out a file, it must not already be checked out by another user.\nValid, but non-existent, file ids will be ignored.\n*Note: There are no partial checkouts - all files must succeed or nothing is checked out.*\n",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FilesToggleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully checked out provided file(s).",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FilesToggleResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    },
                    "403": {
                        "description": "One or more files are already checked out. | User does not have permission to access a file.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error communicating with salesforce. | Invalid salesforce file Id.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessageResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/files/checkin": {
            "post": {
                "tags": [
                    "File Management"
                ],
                "summary": "Checks in files.",
                "description": "Allows the user to \"check in\" one or more files to Docrio by providing a list of salesforce file Ids.\nIn order to check in a file, it must not already be checked in, or be checked out by another user.\nValid, but non-existent, file ids will be ignored.\n*Note: There are no partial checkins - all files must succeed or nothing is checked in.*\n",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FilesToggleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully checked out provided file(s).",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FilesToggleResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    },
                    "403": {
                        "description": "One or more files are already checked in. | One or more files are checked out by another user. | User does not have permission to access a file.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error communicating with salesforce. | Invalid salesforce file Id.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessageResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/files/combine": {
            "post": {
                "tags": [
                    "File Management"
                ],
                "summary": "Initializes combine file process",
                "description": "Kicks off the combine file process with the given files\n",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FilesCombineRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully return the Job Id and meta for the combine files",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FilesCombineResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    }
                }
            }
        },
        "/files/combine/complete": {
            "post": {
                "tags": [
                    "File Management"
                ],
                "summary": "Checks the status of the requested combine pdf",
                "description": "After calling files/combine, use this endpoint to track the process of the PDF.\n\nThis statuses can be of the following:\n\nCOMPLETED\n\nPROCESSING\n\nERROR\n",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FilesCombineCompleteRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully return the status of the file id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FilesCombineCompleteResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    }
                }
            }
        },
        "/files/split": {
            "post": {
                "tags": [
                    "File Management"
                ],
                "summary": "Kicks off PDF split.",
                "description": "Allows the user to split the PDF into multiple PDF. This will kick off PDF Split\n",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FilesSplitRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully initiated PDF split.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FilesSplitResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/files/split/complete": {
            "post": {
                "tags": [
                    "File Management"
                ],
                "summary": "Checks the status of all the split pdf.",
                "description": "Check the status of all the newly created PDF from PDF Split Job\n",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FilesSplitCompleteRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully initiated PDF split.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FilesSplitCompleteResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/multipart": {
            "post": {
                "tags": [
                    "File Management"
                ],
                "summary": "Initiates multipart upload process that creates multiple or single salesforce file record ids and return signed urls and upload Ids.",
                "description": "Providing single or multiple file names and parts number, a salesforce file record id, signed urls, and upload id will be created for each file name provided.\nThe signed urls are valid for 5 minutes and used to upload multi-part files.\n",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MultipartFilesPostRequest"
                            }
                        }
                    },
                    "description": "JSON array containing objects that map Name to the name of the file that is being uploaded."
                },
                "responses": {
                    "200": {
                        "description": "Salesforce file record ids, signed urls, and multipart upload ids were created for all provided file names. The file name provided in request maps to its corresponding signed url, salesforce file record id and multipart upload id.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MultipartFilesPostResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    }
                }
            },
            "put": {
                "tags": [
                    "File Management"
                ],
                "summary": "Initiates multipart upload process that updates single salesforce file record id and return signed urls and upload Id.",
                "description": "Providing a record id and parts number, signed urls, and upload id will be created and returned for the record.\nThe signed urls are valid for 5 minutes and used to upload multi-part files.\n",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MultipartFilesPutRequest"
                            }
                        }
                    },
                    "description": "JSON array containing objects that map Name to the name of the file that is being uploaded."
                },
                "responses": {
                    "200": {
                        "description": "Salesforce file record id, signed urls, and multipart upload id were created for all provided file names. The file name provided in request maps to its corresponding signed url, salesforce file record id and multipart upload id.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MultipartFilesPutResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    },
                    "403": {
                        "description": "You have reached the maximum number of versions for this file.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/BadRequest"
                    }
                }
            }
        },
        "/multipart/complete": {
            "post": {
                "tags": [
                    "File Management"
                ],
                "summary": "Must be called after multipart part files have been successfully uploaded.",
                "description": "After a file has been successfully uploaded using SignedUrls, this call must be made to merge part files uploaded to S3 then get metadata on the merged file and insert it into salesforce.\n",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MultipartFilesCompletePostRequest"
                            }
                        }
                    },
                    "description": "JSON object containing property Ids that is mapped to an array of salesforce file record ids that need to be marked as complete."
                },
                "responses": {
                    "201": {
                        "description": "Files have been successfully marked as complete in salesforce.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MultipartFilesCompletePostResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/NoSalesforcePermission"
                    }
                }
            }
        },
        "/multipart/refresh": {
            "put": {
                "tags": [
                    "File Management"
                ],
                "summary": "Optionally called to generate presigned URLs for an existing multipart upload using uploadId.",
                "description": "After initiating a multipart upload, presigned URLs can be generated to replace expired presigned urls.\nIt can also generate new presigned urls if an existing multipart upload needs more presigned urls than initially anticipated.\n",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MultipartFilesRefreshPutRequest"
                            }
                        }
                    },
                    "description": "JSON object containing property Ids that is mapped to an array of salesforce file record ids that need to be marked as complete."
                },
                "responses": {
                    "201": {
                        "description": "Files have been successfully marked as complete in salesforce.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MultipartFilesRefreshPutResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/NoSalesforcePermission"
                    }
                }
            }
        },
        "/textcontent": {
            "get": {
                "tags": [
                    "File Management"
                ],
                "summary": "Returns the OCR'ed text content of a given file.",
                "description": "Providing a single salesforce file info id, user will receive a SignedUrl that will point to the given text content of a document, separated by pages.\n*Note: This will only work for orgs where OCR is enabled*\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/FileInfoIdRequired"
                    },
                    {
                        "$ref": "#/components/parameters/IsArchived"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully obtained the textcontent for the provided Id.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TextContentPostResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/NoSalesforcePermission"
                    }
                }
            },
            "post": {
                "tags": [
                    "File Management"
                ],
                "summary": "Returns the OCR'ed text content of multiple files.",
                "description": "Providing an array of salesforce file info ids, user will receive a paiload containing SignedUrls that \nwill point to the given text content of a document, separated by pages.\n*Note: This will only work for orgs where OCR is enabled*\n",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "Ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "a1E1U000001juz6UAA"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully obtained the textcontent for the provided Ids.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "Id": {
                                                "type": "string",
                                                "example": "a1E1U000001juz6UAA"
                                            },
                                            "SignedUrl": {
                                                "type": "string",
                                                "example": "https://example.com/signed-url"
                                            },
                                            "Status": {
                                                "type": "string",
                                                "example": "SUCCESS"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/NoSalesforcePermission"
                    }
                }
            }
        },
        "/versions": {
            "get": {
                "tags": [
                    "File Management"
                ],
                "summary": "Returns a list of all versions that currently exist for a given file record.",
                "description": "Providing a single salesforce record id, an array will be returned containing all of the version ids for that file.\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/FileInfoIdRequired"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully obtained all versions for the file record.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VersionsGetResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/NoSalesforcePermission"
                    }
                }
            }
        },
        "/version": {
            "get": {
                "tags": [
                    "File Management"
                ],
                "summary": "Returns the latest version of the specified salesforce file record ids.",
                "description": "Providing an array of salesforce file record ids, an array of objects will be returned containing the salesforce file record id and its latest version id.\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ListOfFileInfoIds"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully obtained all versions for the salesforce file record ids.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VersionGetResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    }
                }
            }
        },
        "/preview": {
            "get": {
                "tags": [
                    "File Management"
                ],
                "summary": "Returns a signed url to preview a file.",
                "description": "Providing a salesforce file record id, and preview type (e.g. pdf, image) a signed url will be returned that can be used to download the preview of that file.\nIf a version id is provided, it will return a preview for that version. Otherwise, it will return the latest version.\nThe signed url is valid for 5 minutes and can be used to download the file.\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/FileInfoIdRequired"
                    },
                    {
                        "$ref": "#/components/parameters/VersionIdOptional"
                    },
                    {
                        "$ref": "#/components/parameters/IsArchived"
                    },
                    {
                        "in": "query",
                        "name": "PreviewType",
                        "description": "Type of preview to return - Currently supports \"pdf\" and \"image\".",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "pdf"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created a signed url for the specified salesforce file record id.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreviewGetResponse"
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "The parameter PreviewType only supports pdf or image.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessageResponseWithFailReason"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/NoSalesforcePermission"
                    },
                    "404": {
                        "description": "File not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessageResponseWithFailReason"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unknown error occurred. Please try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessageResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "File Management"
                ],
                "summary": "Returns an array of signed urls of files to preview and fail reasons for specific files.",
                "description": "Providing an array of objects each consisting of a salesforce file record id a signed url will be returned for each entry that can be used to download the preview of that file.\nEach signed url is valid for 5 minutes and can be used to download the file.\n",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PreviewPostRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully created signed URLs for the specified salesforce file record IDs.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreviewPostResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/NoSalesforcePermission"
                    }
                }
            }
        },
        "/move": {
            "post": {
                "tags": [
                    "File Management"
                ],
                "summary": "Moves the file records to the specified related salesforce record id.",
                "description": "Move is responsible for modifying the RelatedTo value on one or more File Info records.\nProviding an array of salesforce file record ids, the file records will be moved to the specified related salesforce record id.\n",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MovePostRequest"
                            }
                        }
                    },
                    "description": "JSON object containing all salesforce file record ids that will be moved to the specified related salesforce record id."
                },
                "responses": {
                    "200": {
                        "description": "Successfully moved all files - empty failures array.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MovePostResponse"
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "Successfully moved most files - failed record IDs are returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MovePostResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    }
                }
            }
        },
        "/copy": {
            "post": {
                "tags": [
                    "File Management"
                ],
                "summary": "Creates a duplicate of one or more existing files.",
                "description": "Providing an array of salesforce file record ids mapped to their new copy names, will create a complete new copy of the files.\n",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CopyPostRequest"
                            }
                        }
                    },
                    "description": "JSON object containing an array of current salesforce file record ids that are to be copied, mapped to the copied files new name. Also, the related salesforce record id that the copied files will live."
                },
                "responses": {
                    "200": {
                        "description": "Successfully copied files - returns a list of the new copied salesforce file record ids.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CopyPostResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    },
                    "500": {
                        "description": "Failed to upload file metadata in salesforce - returns a list of the salesforce file record ids that were attempted to be copied.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CopyPostResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/history": {
            "get": {
                "tags": [
                    "File Management"
                ],
                "summary": "Returns an array of history records for the specified file.",
                "description": "Providing a single salesforce record id, an array of history records will be returned.\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/FileInfoIdRequired"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully returned history records.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HistoryGetResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    }
                }
            }
        },
        "/search": {
            "post": {
                "tags": [
                    "File Management"
                ],
                "summary": "Returns an array of file records matching the provided search criteria.",
                "description": "Providing a search criteria, up to 1000 files records will be returned that match the criteria.\nAt minumum the search criteria must contain one search value.\n\"Custom_Field__c\" represents values for custom fields that individual firms may create on the File Info object. If custom field values are passed, the name provided in the JSON object must match the API name of the custom field within Litify.\n\nFor an archive search files will always be sorted by Name. To paginate - enter the value of the last file Id and Name retrieved in the paginationState offsetSortId and offsetSortValue fields, respectively.\nOnly the sortState - sortDirection field will be respected for archive search.\n",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SearchPostRequest"
                            }
                        }
                    },
                    "description": "JSON object containing search criteria - at least one value must be provided (e.g. Name, CreatedDate, Category, etc.). Pagination and sorting is supported. Endpoint returns up to 1000 records per request. offsetSortValue is the value of the field specified in SortBy for the last record in the previous page. paginationState and sortState should be used together.\nWhen using pagination to gather all search results the paginationState and paginationToken returned in the response to the previous call should be used.\n"
                },
                "responses": {
                    "200": {
                        "description": "Successfully searched for files.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchPostResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    }
                }
            }
        },
        "/favorites": {
            "get": {
                "tags": [
                    "File Management"
                ],
                "summary": "Returns an array of file records which the user has marked as \"favorites.\"",
                "description": "Providing a single related salesforce record id, an array of file records will be returned that were marked as \"favorites\" within the related record.\n",
                "parameters": [
                    {
                        "in": "query",
                        "name": "RelatedRecordId",
                        "description": "A single related salesforce record id.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "a1E1U000001juz6UAA"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully searched for favorite files.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FavoritesGetResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    }
                }
            }
        },
        "/folders": {
            "get": {
                "tags": [
                    "File Management"
                ],
                "summary": "Returns folder structure for the given record",
                "description": "Providing a record id, an array will return of the file structure for that record. If there is no file structure, an empty array will be returned.\n",
                "parameters": [
                    {
                        "in": "query",
                        "name": "Id",
                        "description": "A single record id.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "a1E1U000001juz6UAA"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully searched for folder struct.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FolderGetResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "File Management"
                ],
                "summary": "Creates new folder",
                "description": "Providing a folder and subfolder path will create a new folder and return successful status\n",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FolderPostRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "New folder has been successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FolderPostResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    },
                    "500": {
                        "description": "An unknown error occurred. Please try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessageResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/folders/zip/create": {
            "post": {
                "tags": [
                    "File Management"
                ],
                "summary": "Initial job process for downloading folders",
                "description": "Providing the fileInfoIds will initial a job process which creates a Zip file of the requested file info Ids.\n\nThe presignedUrl is provided to upload the JSON schema for the Zip Job.\n",
                "parameters": [
                    {
                        "in": "query",
                        "name": "usePost",
                        "description": "If using Docrio v10 or later, pass this parameter with a value of \"true\" .",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "true"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FolderZipCreatePostRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Zip job has been successfully initialized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FolderZipCreatePostResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    },
                    "500": {
                        "description": "An unknown error occurred. Please try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessageResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/folders/zip/complete": {
            "post": {
                "tags": [
                    "File Management"
                ],
                "summary": "use to check status of the zip file",
                "description": "Providing the job id from zip/create will return the current status for that Zip job.\n\nThe status can be \"INITIALIZED\"\"PROCESS\"\"COMPLETED\"\"FAILED\".\n\nThe response will contain a presigned Url to download the Zip file only when the status is \"COMPLETED\"\n",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FolderZipCompletePostRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully retrieved responses from Database",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FolderZipCompletePostResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    },
                    "500": {
                        "description": "An unknown error occurred. Please try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessageResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/unzip/status": {
            "post": {
                "tags": [
                    "File Management"
                ],
                "summary": "use to check status of the unzip jobs",
                "description": "Providing the job id from /files POST call when isUnzip parameter set to true will return the current status for that Zip job.\n\nThe status can be \"INITIALIZED\"\"PROCESS\"\"COMPLETED\"\"FAILED\"\"FAILED-ZIP-FILE-SIZE-EXCEEDED\"\"FAILED-UNZIP-FILE-SIZE-EXCEEDED\".\n\nThe response will contain jobStatuses for each unzip job\n",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnzipStatusPostRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully retrieved responses from Database",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnzipStatusPostResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    },
                    "500": {
                        "description": "An unknown error occurred. Please try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessageResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/unzip/existing": {
            "post": {
                "tags": [
                    "File Management"
                ],
                "summary": "use to unzip existing zip file.",
                "description": "Providing single or multiple ids of existing zip files, it will copy existing zip file from Documents bucket to Unzip bucket, which triggers Unzip lambda function.\n",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnzipExistingPostRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully retrieved responses from Database",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnzipExistingPostResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    },
                    "500": {
                        "description": "An unknown error occurred. Please try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessageResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/pdf/convert": {
            "post": {
                "tags": [
                    "File Management"
                ],
                "summary": "Convert files to PDF by record id",
                "description": "Providing single or multiple ids of existing Microsoft Excel, PowerPoint, Word and other document type (application/rtf, text/plain, text/csv, application/vnd.wordperfect, application/vnd.ms-outlook, message/rfc822, text/html) file, it will copy existing pdf file from rendition bucket to the Documents bucket.\n",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PdfConvertPostRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully initiated PDF convert jobs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PdfConvertPostResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    },
                    "500": {
                        "description": "An unknown error occurred. Please try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessageResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/pdf/convert/complete": {
            "post": {
                "tags": [
                    "File Management"
                ],
                "summary": "Get the status of an existing pdf convert job.",
                "description": "This endpoint can be used to retrieve the status of an existing convert job by providing the PDFConvertId.\n",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PdfConvertCompletePostRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully retrieved responses from Database",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PdfConvertCompletePostResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    },
                    "500": {
                        "description": "An unknown error occurred. Please try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessageResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/merge": {
            "post": {
                "tags": [
                    "Document Generation"
                ],
                "summary": "Begins the process of merging a document with merge tags and an object containing the merge definitions",
                "description": "Merge is responsible for enqueing the input file record IDs (SourceID) to be merged with the information in the Tags property.\nSalesforce will create a Record for the resulting merged files which will get returned as output\n",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MergePostRequest"
                            }
                        }
                    },
                    "description": "JSON array where each entry contains metadata about the file being merged and a set of tags that will be used in the merging process."
                },
                "responses": {
                    "200": {
                        "description": "Files have been enqueued in the merging process and file record IDs have been created in Salesforce",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MergePostResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    }
                }
            },
            "get": {
                "tags": [
                    "Document Generation"
                ],
                "summary": "Returns the exact JSON containing metadata about the file being merged, required to call POST /merge.",
                "description": "Generates the merge JSON necessary to perform a file merge, includes merge tags and their corresponding values.\n",
                "parameters": [
                    {
                        "in": "query",
                        "name": "TemplateId",
                        "description": "The Salesforce Id of the litify_docs__Template__c record that the user would like to merge",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "a1Z1k000003uSFXEA2"
                        }
                    },
                    {
                        "in": "query",
                        "name": "RecordId",
                        "description": "The Salesforce Id of the record the user would like to merge the file to",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "0011k000013n8klAAA"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Metadata for file merge retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MergeGetResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/NoSalesforcePermission"
                    },
                    "500": {
                        "description": "An unexpected error occurred during processing.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessageResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/merge/complete": {
            "post": {
                "tags": [
                    "Document Generation"
                ],
                "summary": "Must be called after a file has been successfully merged.",
                "description": "After a file has been successfully merged, this call must be made to get metadata on the file and insert it into salesforce.\n",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MergeCompletePostRequest"
                            }
                        }
                    },
                    "description": "JSON array containing all salesforce file record ids of the files to be marked as completed"
                },
                "responses": {
                    "200": {
                        "description": "Files have been successfully marked as complete in salesforce.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MergeCompletePostResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/NoSalesforcePermission"
                    }
                }
            }
        },
        "/merge/schema": {
            "get": {
                "tags": [
                    "Document Generation"
                ],
                "summary": "Returns JSON that describes the JSON returned by the GET /merge endpoint for a specific template.",
                "description": "This endpoint will return the schema describing the metadata returned from the GET /merge endpoint for a specific template.\n",
                "parameters": [
                    {
                        "in": "query",
                        "name": "TemplateId",
                        "description": "The Salesforce Id of the litify_docs__Template__c record that the user will use in the GET /merge request",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "a1Z1k000003uSFXEA2"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Merge schema has been retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MergeSchemaGetResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/NoSalesforcePermission"
                    },
                    "500": {
                        "description": "An unexpected error occurred during processing.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessageResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/externallink/create": {
            "post": {
                "tags": [
                    "Sharing Management"
                ],
                "summary": "Creates an external link for the provided FileInfoRecords and corresponding FileLinkRecord information.",
                "description": "Providing an array of FileInfoRecords and a FileLinkRecord will generate an external link and return corresponding link information like author, org name, and specific link information like unique id, corresponding Salesforce Id, password protection indication, and expiration date.\n",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExternalLinkPostRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "External Link has been successfully created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExternalLinkPostResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    }
                }
            }
        },
        "/externallink/preview": {
            "get": {
                "security": [
                    {
                        "ExternalLinkPassword": []
                    }
                ],
                "tags": [
                    "Sharing"
                ],
                "summary": "Returns a preview link for the provided external link information. This action will search within the associated client's pdf rendition bucket.",
                "description": "A signed url will be created for the ShareId and FileId provided. The response will contain the signed url along with its expiration time. The signed url is valid for 5 minutes and can be used to upload the file. If the external link is password protected the password needs to be included as a basic authentication header.\nThe username for constructing an authenticated request to this endpoint with is `guest`. In order to use external link preview endpoint you need to use the links from the external link api only.\n",
                "parameters": [
                    {
                        "in": "query",
                        "name": "ShareId",
                        "description": "External Link's unique ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "grkCwtHN3mXhm-eN4LP83SQ-IEmVaVu4rzmsoZo_oco"
                        }
                    },
                    {
                        "in": "query",
                        "name": "FileId",
                        "description": "SF FileInfo ID for a file record.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "a111g000002DR3lAAG"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully returns a generated SignedUrl for the External Link.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExternalLinkPreviewResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/NoPassword"
                    }
                }
            }
        },
        "/externallink/download": {
            "get": {
                "security": [
                    {
                        "ExternalLinkPassword": []
                    }
                ],
                "tags": [
                    "Sharing"
                ],
                "summary": "Returns a presinged URL for the provided external link information. This action will search within the associated client's dedicated upload S3 bucket.",
                "description": "A signed url will be created for the ShareId and FileId provided. The response will contain the signed url along with its expiration time. The signed url is valid for 5 minutes and can be used to upload the file. If the external link is password protected the password needs to be included as a basic authentication header.\nThe username for constructing an authenticated request to this endpoint with is `guest`. In order to use external link download endpoint you need to use the links from the external link api only.\n",
                "parameters": [
                    {
                        "in": "query",
                        "name": "ShareId",
                        "description": "External Link's unique ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "grkCwtHN3mXhm-eN4LP83SQ-IEmVaVu4rzmsoZo_oco"
                        }
                    },
                    {
                        "in": "query",
                        "name": "FileIds",
                        "description": "SF FileInfo ID for a file record.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "a111g000002DR3lAAG"
                        }
                    },
                    {
                        "in": "query",
                        "name": "FileNames",
                        "description": "SF FileName for a file record.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "foo.pdf"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully returns a generated SignedUrl for the External Link.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExternalLinkDownloadResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/NoPassword"
                    }
                }
            }
        },
        "/externallink/zip": {
            "post": {
                "tags": [
                    "Sharing"
                ],
                "summary": "Downloads multiple files and folders",
                "description": "Provide an array of FileInfoRecords to download, this list must be inclusive of all file records requested regardless of whether or not they appear in the `FileIdsWithFolderPath` object. To include the download of folders, provide the object `FileIdsWithFolderPath`.\n`FileIdsWithFolderPath` includes objects `files` and `filePathReference`. `files` represents all the file info records that must be downloaded within a folder. `filePathReference` represents the file info record with its corresponding folder name.\n",
                "parameters": [
                    {
                        "in": "query",
                        "name": "ShareId",
                        "description": "External Link's unique ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "grkCwtHN3mXhm-eN4LP83SQ-IEmVaVu4rzmsoZo_oco"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExternalLinkZipRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Zip download has been successfully initiated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExternalLinkZipResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    }
                }
            },
            "get": {
                "tags": [
                    "Sharing"
                ],
                "summary": "Retrieves the status of a previously initiated zip download",
                "description": "Provide the ShareId of the external link that was downloaded, with the ZipFileId returned from POST /externallink/zip",
                "parameters": [
                    {
                        "in": "query",
                        "name": "ShareId",
                        "description": "External Link's unique ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "grkCwtHN3mXhm-eN4LP83SQ-IEmVaVu4rzmsoZo_oco"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ZipFileId",
                        "description": "ZipFileId of the download request",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "76257fe3-872f-4ddc-9c42-852446a3e482"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully returns a generated SignedUrl for the ZipDownload.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExternalLinkZipStatusResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/NoPassword"
                    }
                }
            }
        },
        "/externallink": {
            "get": {
                "security": [
                    {
                        "ExternalLinkPassword": []
                    }
                ],
                "tags": [
                    "Sharing"
                ],
                "summary": "Returns external link top level attributes along with associated Record(s) external link information.",
                "description": "The response will contain the external link top level attributes along with Record(s) info for the ShareId provided. If the external link is password protected the password needs to be included as a basic authentication header.\nThe username for constructing an authenticated request to this endpoint with is `guest`.\nIf the external link contains shared folders, the response will include a map reference to the structure of the folder\n",
                "parameters": [
                    {
                        "in": "query",
                        "name": "ShareId",
                        "description": "External Link's unique ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "grkCwtHN3mXhm-eN4LP83SQ-IEmVaVu4rzmsoZo_oco"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully returned generated SignedUrl for the External Link.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExternalLinkGetResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/NoPassword"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Sharing Management"
                ],
                "summary": "Deletes the External Link associated with the provided LinkId.",
                "description": "Providing an External Link Id, the external link will be deleted from S3 and no longer available for any request.\n",
                "parameters": [
                    {
                        "in": "query",
                        "name": "LinkId",
                        "description": "External Link's unique ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "grkCwtHN3mXhm-eN4LP83SQ-IEmVaVu4rzmsoZo_oco"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted the specified external link - any failures will be returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExternalLinkDeleteResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "SalesforceAccessToken": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "Salesforce access token"
            },
            "X-API-Key": {
                "type": "apiKey",
                "in": "header",
                "name": "X-API-Key"
            },
            "ExternalLinkPassword": {
                "type": "http",
                "scheme": "basic"
            }
        },
        "parameters": {
            "IsArchived": {
                "in": "query",
                "name": "IsArchived",
                "description": "True if the file(s) are archived. When performing an archived file action, the archived file's original id must be used.",
                "schema": {
                    "type": "string",
                    "example": "true"
                }
            },
            "ListOfFileInfoIds": {
                "in": "query",
                "name": "Ids",
                "description": "A comma-separated list of Salesforce record Ids for Docrio files (litify_docs__File_Info__c records) (18 digits)",
                "required": true,
                "schema": {
                    "$ref": "#/components/schemas/SalesforceRecordIdList"
                }
            },
            "ListOfFileInfoIdsOptional": {
                "in": "query",
                "name": "Ids",
                "description": "A comma-separated list of Salesforce record Ids for Docrio files (litify_docs__File_Info__c records) (18 digits)",
                "schema": {
                    "$ref": "#/components/schemas/SalesforceRecordIdList"
                }
            },
            "FileInfoIdOptional": {
                "in": "query",
                "name": "Id",
                "description": "The Salesforce record Id for a Docrio file (litify_docs__File_Info__c record) (18 digits)",
                "schema": {
                    "$ref": "#/components/schemas/SalesforceRecordId"
                }
            },
            "FileNameOptional": {
                "in": "query",
                "name": "FileName",
                "description": "The name of the file to be downloaded. Setting this will result in presigned urls with responses that have a content-disposition set to attachment instead of inline with filename set to the value provided.\nThis will indicate to the browser that the file should be saved or downloaded rather than displayed inline on the page. The FileName will be applied to all presigned urls if multiple are requested.\n",
                "schema": {
                    "type": "string",
                    "example": "download.jpg"
                }
            },
            "FileInfoIdRequired": {
                "in": "query",
                "name": "Id",
                "description": "A Salesforce litify_docs__File_Info__c record Id (18 digits)",
                "required": true,
                "schema": {
                    "$ref": "#/components/schemas/SalesforceRecordId"
                }
            },
            "VersionIdOptional": {
                "in": "query",
                "name": "VersionId",
                "description": "The version identifier for a specific version of a Docrio file.",
                "required": false,
                "schema": {
                    "type": "string",
                    "example": "ZXhhbXBsZWlk"
                }
            }
        },
        "responses": {
            "NotAuthorized": {
                "description": "Unauthorized - You must have a Salesforce authentication token in your header.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorMessageResponse"
                        }
                    }
                }
            },
            "BadRequest": {
                "description": "There was an error parsing the request | Missing property",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorMessageResponse"
                        }
                    }
                }
            },
            "InvalidJobDetails": {
                "description": "Invalid job details provided",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorMessageResponse"
                        }
                    }
                }
            },
            "NoSalesforcePermission": {
                "description": "User does not have permission to access the file.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorMessageResponse"
                        }
                    }
                }
            },
            "NoPassword": {
                "description": "User needs to provide password of External Link.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorMessageResponseWithFailReason"
                        }
                    }
                }
            }
        },
        "schemas": {
            "SalesforceRecordId": {
                "type": "string",
                "description": "Salesforce record Ids are 18-digit base62 strings.",
                "pattern": "^[a-zA-Z0-9]{18}$",
                "example": "a1e000000000001AAA"
            },
            "SalesforceRecordIdList": {
                "type": "string",
                "description": "A comma-separated list of Salesforce record Ids",
                "pattern": "^[a-zA-Z0-9]{18}(?:,?[a-zA-Z0-9]{18})*$",
                "example": "a1e000000000001AAA,a1e000000000002ABA"
            },
            "SearchPostRequest": {
                "type": "object",
                "properties": {
                    "Name": {
                        "type": "string",
                        "example": "example-doc"
                    },
                    "CreatedDate": {
                        "type": "object",
                        "properties": {
                            "StartValue": {
                                "type": "string",
                                "example": "2019-01-01"
                            },
                            "EndValue": {
                                "type": "string",
                                "example": "2019-01-04"
                            }
                        }
                    },
                    "Author": {
                        "type": "string",
                        "example": "John Smith"
                    },
                    "litify_docs__Related_To__c": {
                        "type": "string",
                        "example": "a1E1U000001juz6UAA"
                    },
                    "Custom_Field__c": {
                        "type": "string",
                        "example": "custom_value"
                    },
                    "IsArchived": {
                        "type": "string",
                        "example": "true"
                    },
                    "paginationState": {
                        "type": "object",
                        "properties": {
                            "offsetSortValue": {
                                "type": "string",
                                "example": "2019-01-01"
                            },
                            "offsetSortId": {
                                "type": "string",
                                "example": "fileId"
                            }
                        }
                    },
                    "paginationToken": {
                        "type": "string",
                        "example": "a111g000002DR3lAAG#0.9#5D9QAUSMDBkOHYwMDAwMDFsdWxmdWFpFkI2YnBjWERQUzEtR0dicEtOelE1ZkEAFlhpVUxRcWV5VHpDWTUtbkJqaHBzWlEAAAAAAAAAANoWYW82Yk92LUxURmE4UDdiMUVSdGt3URIwMGQ4djAwMDAwMWx1bGZ1YWkWQjZicGNYRFBTMS1HR2JwS056UTVmQQEWWGlVTFFxZXlUekNZNS1uQmpocHNaUQAAAAAAAAAA2xZhbzZiT3YtTFRGYThQN2IxRVJ0a3dREjAwZDh2MDAwMDAxbHVsZnVhaRZCNmJwY1hEUFMxLUdHYnBLTnpRNWZBAhZY"
                    },
                    "sortState": {
                        "type": "object",
                        "properties": {
                            "sortField": {
                                "type": "string",
                                "example": "CreatedDate"
                            },
                            "sortDirection": {
                                "type": "string",
                                "example": "ASC"
                            }
                        }
                    }
                }
            },
            "SearchPostResponse": {
                "type": "object",
                "properties": {
                    "Records": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FileRecordObject"
                        }
                    },
                    "paginationState": {
                        "type": "object",
                        "properties": {
                            "offsetSortValue": {
                                "type": "string",
                                "example": "2019-01-01"
                            },
                            "offsetSortId": {
                                "type": "string",
                                "example": "fileId"
                            }
                        }
                    },
                    "paginationToken": {
                        "type": "string",
                        "example": "a111g000002DR3lAAG#0.9#5D9QAUSMDBkOHYwMDAwMDFsdWxmdWFpFkI2YnBjWERQUzEtR0dicEtOelE1ZkEAFlhpVUxRcWV5VHpDWTUtbkJqaHBzWlEAAAAAAAAAANoWYW82Yk92LUxURmE4UDdiMUVSdGt3URIwMGQ4djAwMDAwMWx1bGZ1YWkWQjZicGNYRFBTMS1HR2JwS056UTVmQQEWWGlVTFFxZXlUekNZNS1uQmpocHNaUQAAAAAAAAAA2xZhbzZiT3YtTFRGYThQN2IxRVJ0a3dREjAwZDh2MDAwMDAxbHVsZnVhaRZCNmJwY1hEUFMxLUdHYnBLTnpRNWZBAhZY"
                    }
                }
            },
            "MovePostRequest": {
                "type": "object",
                "properties": {
                    "Ids": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "a1E1U000001juz6UAA"
                        }
                    },
                    "RelatedRecordId": {
                        "type": "string",
                        "example": "a1E1U000001juz6UAA"
                    }
                }
            },
            "MovePostResponse": {
                "type": "object",
                "properties": {
                    "Failures": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "a1E1U000001juz6UAA"
                        }
                    }
                }
            },
            "MergePostRequest": {
                "type": "object",
                "properties": {
                    "Templates": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "Flatten": {
                                    "type": "boolean",
                                    "description": "Only used for PDF Templates.\nIf true, the template will be flattened. This means that the template will be merged into the file as a single layer, and the resulting file will not be editable.\nIf false, the template will be merged into the file as a layer, and the resulting file will be editable.\n"
                                },
                                "SourceId": {
                                    "type": "string",
                                    "example": "a1E1U000001juz6UAA"
                                },
                                "Tags": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                },
                                "litify_docs__Related_To__c": {
                                    "type": "string",
                                    "example": "a1E1U000001juz6UAA"
                                },
                                "litify_docs__Folder_Path__c": {
                                    "type": "string",
                                    "example": "[\r\n                                            \"Emails\",\r\n                                            \"Docs\"\r\n                                        ]"
                                },
                                "litify_docs__File_Type__c": {
                                    "type": "string",
                                    "example": "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
                                },
                                "Name": {
                                    "type": "string",
                                    "example": "expense.docx"
                                }
                            }
                        }
                    }
                }
            },
            "MergePostResponse": {
                "type": "object",
                "properties": {
                    "Records": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "Id": {
                                    "type": "string",
                                    "example": "a1E1U000001juz6UAA"
                                },
                                "litify_docs__Related_To__c": {
                                    "type": "string",
                                    "example": "a1E1U000001juz6UAA"
                                },
                                "litify_docs__Folder_Path__c": {
                                    "type": "string",
                                    "example": "[\r\n                                            \"Emails\",\r\n                                            \"Docs\"\r\n                                        ]"
                                },
                                "litify_docs__File_Type__c": {
                                    "type": "string",
                                    "example": "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
                                },
                                "litify_docs__Merge_Id__c": {
                                    "type": "string",
                                    "example": "0"
                                },
                                "Name": {
                                    "type": "string",
                                    "example": "expense.docx"
                                }
                            }
                        }
                    }
                }
            },
            "MergeGetResponse": {
                "type": "object",
                "properties": {
                    "Templates": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "SourceId": {
                                    "type": "string",
                                    "example": "a0E1U000001juz6UAA"
                                },
                                "litify_docs__Origin_Merge_Template__c": {
                                    "type": "string",
                                    "example": "a1Z1k000003uSFXEA2"
                                },
                                "litify_docs__Related_To__c": {
                                    "type": "string",
                                    "example": "0011k000013n8klAAA"
                                },
                                "litify_docs__Bulk_Merge_Job__c": {
                                    "type": "string",
                                    "example": null
                                },
                                "litify_docs__Folder_Path__c": {
                                    "type": "string",
                                    "example": "[\r\n                                            \"My Folder\"\r\n                                        ]"
                                },
                                "litify_docs__File_Type__c": {
                                    "type": "string",
                                    "example": "application/pdf"
                                },
                                "Name": {
                                    "type": "string",
                                    "example": "Merged File Name.pdf"
                                },
                                "Tags": {
                                    "type": "object",
                                    "example": {
                                        "SampleTagName": "SAMPLE_TAG_VALUE"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "MergeCompletePostRequest": {
                "type": "object",
                "properties": {
                    "Ids": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "a1E1U000001juz6UAA"
                        }
                    }
                }
            },
            "MergeCompletePostResponse": {
                "type": "object",
                "properties": {
                    "Statuses": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "example": {
                            "a1E1U000001juz6UAA": "COMPLETED"
                        }
                    }
                }
            },
            "MergeSchemaGetResponse": {
                "type": "object",
                "properties": {
                    "$schema": {
                        "type": "string",
                        "example": "http://json-schema.org/draft/2020-12/schema"
                    },
                    "type": {
                        "type": "string",
                        "example": "object"
                    },
                    "properties": {
                        "type": "object",
                        "properties": {
                            "Templates": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "SourceId": {
                                            "type": "object",
                                            "properties": {
                                                "const": {
                                                    "type": "string",
                                                    "example": "TEMPLATE_FILE_INFO_ID"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "The Id of the file info representing the merge template."
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "string"
                                                }
                                            }
                                        },
                                        "Tags": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "example": "object"
                                                },
                                                "required": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "RequiredMergeTagName"
                                                    }
                                                },
                                                "properties": {
                                                    "type": "object",
                                                    "example": {
                                                        "SampleTagName": {
                                                            "title": "input name",
                                                            "type": "input type"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "litify_docs__Origin_Merge_Template__c": {
                                            "type": "object",
                                            "properties": {
                                                "const": {
                                                    "type": "string",
                                                    "example": "Id of litify_docs__Template__c record"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "The Merge Template record from which the File Info record was created."
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Origin Merge Template"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "string"
                                                }
                                            }
                                        },
                                        "litify_docs__Related_To__c": {
                                            "type": "object",
                                            "properties": {
                                                "description": {
                                                    "type": "string",
                                                    "example": "The Id of the record that the file is related to."
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Related To"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "string"
                                                }
                                            }
                                        },
                                        "litify_docs__Bulk_Merge__c": {
                                            "type": "object",
                                            "properties": {
                                                "description": {
                                                    "type": "string",
                                                    "example": "The Bulk Merge Job from which this file originated."
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Bulk Merge Job"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "string"
                                                }
                                            }
                                        },
                                        "litify_docs__Folder_Path__c": {
                                            "type": "object",
                                            "properties": {
                                                "description": {
                                                    "type": "string",
                                                    "example": "The location of the file within the folder structure of the record to which the file is related. Stored in JSON format."
                                                },
                                                "example": {
                                                    "type": "string",
                                                    "example": "[\r\n                                                            \"My Folder\"\r\n                                                        ]"
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Parent Folder"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "string"
                                                }
                                            }
                                        },
                                        "litify_docs__File_Type__c": {
                                            "type": "object",
                                            "properties": {
                                                "const": {
                                                    "type": "string",
                                                    "example": "application/pdf"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "The template file's MIME type."
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Latest Version File Type"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "string"
                                                }
                                            }
                                        },
                                        "Name": {
                                            "type": "object",
                                            "properties": {
                                                "description": {
                                                    "type": "string",
                                                    "example": "Name of the the merged file"
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "File Name"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "Templates"
                        }
                    }
                }
            },
            "CopyPostRequest": {
                "type": "object",
                "properties": {
                    "Records": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "Id": {
                                    "type": "string",
                                    "example": "a1E1U000001juz6UAA"
                                },
                                "Name": {
                                    "type": "string",
                                    "example": "coped-file-name.docx"
                                }
                            }
                        }
                    },
                    "RelatedRecordId": {
                        "type": "string",
                        "example": "a1E1U000001juz6UAA"
                    }
                }
            },
            "CopyPostResponse": {
                "type": "object",
                "properties": {
                    "Copies": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "OriginalId": {
                                    "type": "string",
                                    "example": "a1E1U000001juz6UAA"
                                },
                                "NewId": {
                                    "type": "string",
                                    "example": "a1E1U000002klm3UBB"
                                },
                                "FailReason": {
                                    "type": "string",
                                    "example": "String explaining why it failed."
                                }
                            }
                        }
                    }
                }
            },
            "HistoryGetResponse": {
                "type": "object",
                "properties": {
                    "Records": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/HistoryRecordObject"
                        }
                    }
                }
            },
            "FavoritesGetResponse": {
                "type": "object",
                "properties": {
                    "Records": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FileRecordObject"
                        }
                    }
                }
            },
            "FolderGetResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/FolderStructureObject"
                }
            },
            "FolderPostRequest": {
                "type": "object",
                "properties": {
                    "recordId": {
                        "type": "string",
                        "example": "a0f000000000000abc"
                    },
                    "folderPath": {
                        "type": "string",
                        "example": "[\r\n                                \"parent folder\",\r\n                                \"subfolder\"\r\n                            ]"
                    }
                }
            },
            "FolderPostResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/FolderStructureObject"
                }
            },
            "FolderZipCreatePostRequest": {
                "type": "object",
                "properties": {
                    "fileInfoIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "a141700000As4zEAAR"
                        }
                    },
                    "IsArchived": {
                        "type": "string",
                        "example": "true"
                    }
                }
            },
            "FolderZipCreatePostResponse": {
                "type": "object",
                "properties": {
                    "jobId": {
                        "type": "string",
                        "example": "1052217a-956b-433b-99eb-ab4ef82ceb5a"
                    },
                    "presignedUrl": {
                        "type": "string",
                        "example": "zip-file-metadata-{s3-presigned-url}"
                    }
                }
            },
            "FolderZipCompletePostRequest": {
                "type": "object",
                "properties": {
                    "jobId": {
                        "type": "string",
                        "example": "1052217a-956b-433b-99eb-ab4ef82ceb5a"
                    },
                    "IsArchived": {
                        "type": "string",
                        "example": "true"
                    }
                }
            },
            "UnzipExistingPostRequest": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "Name": {
                            "type": "string",
                            "example": "name-of-file.zip"
                        },
                        "originalId": {
                            "type": "string",
                            "example": "a1E1U000001juz6UAA"
                        },
                        "litify_docs__Folder_Path__c": {
                            "type": "string",
                            "example": "[\r\n                                    \"Emails\",\r\n                                    \"Bills\"\r\n                                ]"
                        },
                        "litify_docs__Related_To_Api_Name__c": {
                            "type": "string",
                            "example": "litify_pm__Matter__c"
                        },
                        "litify_docs__Related_To__c": {
                            "type": "string",
                            "example": "a0U1U000001NvetUAC"
                        },
                        "litify_docs__File_Type__c": {
                            "type": "string",
                            "example": "application/zip"
                        }
                    },
                    "required": [
                        "Name",
                        "originalId",
                        "litify_docs__Related_To_Api_Name__c",
                        "litify_docs__Related_To__c",
                        "litify_docs__File_Type__c"
                    ]
                }
            },
            "UnzipStatusPostRequest": {
                "type": "object",
                "properties": {
                    "jobIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "unzip/efef393c-af05-4c0a-9a99-5935de76c194"
                        }
                    }
                }
            },
            "PdfConvertPostRequest": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "recordId": {
                            "type": "string",
                            "example": "a1YRL000001H7u92AC"
                        },
                        "versionId": {
                            "type": "string",
                            "example": "u9dzzd48K8qsgvv53aEm4RQfqsNL4Gym"
                        }
                    },
                    "required": [
                        "recordId"
                    ]
                }
            },
            "PdfConvertCompletePostRequest": {
                "type": "object",
                "properties": {
                    "jobIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "a1YRL000001Hpwn2AC"
                        }
                    }
                }
            },
            "FolderZipCompletePostResponse": {
                "type": "object",
                "properties": {
                    "jobId": {
                        "type": "string",
                        "example": "1052217a-956b-433b-99eb-ab4ef82ceb5a"
                    },
                    "expirationTime": {
                        "type": "int",
                        "example": 1627581956
                    },
                    "status": {
                        "type": "string",
                        "example": "COMPLETED"
                    },
                    "fileInfoIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "a141700000As4zEAAR"
                        }
                    },
                    "presignedUrl": {
                        "type": "string",
                        "example": "https://s3-presigned-url"
                    }
                }
            },
            "UnzipExistingPostResponse": {
                "type": "object",
                "properties": {
                    "name-of-file.zip": {
                        "type": "object",
                        "properties": {
                            "Name": {
                                "type": "string",
                                "example": "name-of-file.zip"
                            },
                            "jobId": {
                                "type": "string",
                                "example": "unzip/95d3d822-a759-466a-8544-a3f06be5ad10"
                            },
                            "originalId": {
                                "type": "string",
                                "example": "a1E1U000001juz6UAA"
                            },
                            "litify_docs__Related_To__c": {
                                "type": "string",
                                "example": "a0U1U000001NvetUAC"
                            }
                        }
                    }
                }
            },
            "UnzipStatusPostResponse": {
                "type": "object",
                "properties": {
                    "jobStatuses": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "jobId": {
                                    "type": "string",
                                    "example": "1052217a-956b-433b-99eb-ab4ef82ceb5a"
                                },
                                "status": {
                                    "type": "string",
                                    "example": "COMPLETED"
                                }
                            }
                        }
                    }
                }
            },
            "PdfConvertPostResponse": {
                "type": "object",
                "properties": {
                    "ConvertedFiles": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "PDFConvertId": {
                                    "type": "string",
                                    "example": "a1YRL000001Hpwn2AC"
                                },
                                "Status": {
                                    "type": "string",
                                    "example": "INITIALIZED"
                                }
                            }
                        }
                    }
                }
            },
            "PdfConvertCompletePostResponse": {
                "type": "object",
                "properties": {
                    "jobStatuses": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "jobId": {
                                    "type": "string",
                                    "example": "a1YRL000001Hpwn2AC"
                                },
                                "status": {
                                    "type": "string",
                                    "example": "SUCCESS"
                                }
                            }
                        }
                    }
                }
            },
            "VersionsGetResponse": {
                "type": "object",
                "properties": {
                    "Versions": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "123456"
                        }
                    }
                }
            },
            "VersionGetResponse": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "Id": {
                            "type": "string",
                            "example": "a1E1U000001juz6UAA"
                        },
                        "VersionsId": {
                            "type": "string",
                            "example": "123456"
                        }
                    }
                }
            },
            "PreviewGetResponse": {
                "$ref": "#/components/schemas/SignedUrlObject"
            },
            "PreviewPostRequest": {
                "type": "object",
                "properties": {
                    "Records": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "PreviewType": {
                                    "type": "string",
                                    "example": "pdf"
                                },
                                "Id": {
                                    "type": "string",
                                    "example": "a1E1U000002XOuoUAG"
                                },
                                "VersionId": {
                                    "type": "string",
                                    "example": "0"
                                }
                            }
                        }
                    },
                    "IsArchived": {
                        "type": "string",
                        "example": "true"
                    }
                }
            },
            "PreviewPostResponse": {
                "type": "object",
                "properties": {
                    "Records": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SignedUrlObject"
                        }
                    }
                }
            },
            "FilesInfoGetResponse": {
                "type": "object",
                "properties": {
                    "Records": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FileRecordObject"
                        }
                    }
                }
            },
            "FilesGetResponse": {
                "type": "object",
                "properties": {
                    "Records": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SignedUrlObject"
                        }
                    }
                }
            },
            "FilesDeleteResponse": {
                "type": "object",
                "properties": {
                    "Failures": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "a1E1U000001juz6UAA"
                        }
                    }
                }
            },
            "FilesPatchRequest": {
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "string",
                        "example": "a1E1U000001juz6UAA"
                    },
                    "Name": {
                        "type": "string",
                        "example": "Name of File"
                    },
                    "litify_docs__Author__c": {
                        "type": "string",
                        "example": "Gary"
                    },
                    "litify_docs__Description__c": {
                        "type": "string",
                        "example": "Description of file"
                    },
                    "litify_docs__External_File_Path__c": {
                        "type": "string",
                        "example": "files/path"
                    },
                    "litify_docs__External_ID__c": {
                        "type": "string",
                        "example": "123abc"
                    },
                    "litify_docs__Folder_Path__c": {
                        "type": "string",
                        "example": "[\r\n                                \"Emails\",\r\n                                \"Bills\"\r\n                            ]"
                    },
                    "litify_docs__From__c": {
                        "type": "string",
                        "example": "From"
                    },
                    "litify_docs__To__c": {
                        "type": "string",
                        "example": "To"
                    },
                    "litify_docs__Related_To_Api_Name__c": {
                        "type": "string",
                        "example": "litify_pm__Matter__c"
                    },
                    "litify_docs__Related_To__c": {
                        "type": "string",
                        "example": "a0U1U000001NvetUAC"
                    },
                    "litify_docs__File_Type__c": {
                        "type": "string",
                        "example": "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
                    },
                    "Custom_Field__c": {
                        "type": "string",
                        "example": "custom_value"
                    }
                },
                "required": [
                    "Id"
                ]
            },
            "FilesPatchResponse": {
                "$ref": "#/components/schemas/FileRecordObject"
            },
            "FilesPutRequest": {
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "string",
                        "example": "a1E1U000001juz6UAA"
                    }
                },
                "required": [
                    "Id"
                ]
            },
            "FilesPutResponse": {
                "$ref": "#/components/schemas/SignedUrlObject"
            },
            "FilesPostRequest": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "Name": {
                            "type": "string",
                            "example": "name-of-file.png"
                        },
                        "litify_docs__Author__c": {
                            "type": "string",
                            "example": "Gary"
                        },
                        "litify_docs__Description__c": {
                            "type": "string",
                            "example": "Description of file"
                        },
                        "litify_docs__External_File_Path__c": {
                            "type": "string",
                            "example": "files/path"
                        },
                        "litify_docs__External_ID__c": {
                            "type": "string",
                            "example": "123abc"
                        },
                        "litify_docs__Folder_Path__c": {
                            "type": "string",
                            "example": "[\r\n                                    \"Emails\",\r\n                                    \"Bills\"\r\n                                ]"
                        },
                        "litify_docs__From__c": {
                            "type": "string",
                            "example": "From"
                        },
                        "litify_docs__To__c": {
                            "type": "string",
                            "example": "To"
                        },
                        "litify_docs__Related_To_Api_Name__c": {
                            "type": "string",
                            "example": "litify_pm__Matter__c"
                        },
                        "litify_docs__Related_To__c": {
                            "type": "string",
                            "example": "a0U1U000001NvetUAC"
                        },
                        "litify_docs__File_Type__c": {
                            "type": "string",
                            "example": "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
                        },
                        "isUnzip": {
                            "type": "boolean",
                            "example": true
                        }
                    },
                    "required": [
                        "Name"
                    ]
                }
            },
            "FilesPostResponse": {
                "type": "object",
                "properties": {
                    "name-of-file.png": {
                        "$ref": "#/components/schemas/SignedUrlObject"
                    }
                }
            },
            "FilesTAPostRequest": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "Name": {
                            "type": "string",
                            "example": "name-of-file.png"
                        },
                        "litify_docs__Author__c": {
                            "type": "string",
                            "example": "Gary"
                        },
                        "litify_docs__Description__c": {
                            "type": "string",
                            "example": "Description of file"
                        },
                        "litify_docs__External_File_Path__c": {
                            "type": "string",
                            "example": "files/path"
                        },
                        "litify_docs__External_ID__c": {
                            "type": "string",
                            "example": "123abc"
                        },
                        "litify_docs__Folder_Path__c": {
                            "type": "string",
                            "example": "[\r\n                                    \"Emails\",\r\n                                    \"Bills\"\r\n                                ]"
                        },
                        "litify_docs__From__c": {
                            "type": "string",
                            "example": "From"
                        },
                        "litify_docs__To__c": {
                            "type": "string",
                            "example": "To"
                        },
                        "litify_docs__Related_To_Api_Name__c": {
                            "type": "string",
                            "example": "litify_pm__Matter__c"
                        },
                        "litify_docs__Related_To__c": {
                            "type": "string",
                            "example": "a0U1U000001NvetUAC"
                        },
                        "litify_docs__File_Type__c": {
                            "type": "string",
                            "example": "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
                        }
                    },
                    "required": [
                        "Name"
                    ]
                }
            },
            "FilesTAPostResponse": {
                "type": "object",
                "properties": {
                    "name-of-file.png": {
                        "$ref": "#/components/schemas/SignedUrlObject"
                    }
                }
            },
            "MultipartFilesPutRequest": {
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "string",
                        "example": "a1E1U000001juz6UAA"
                    },
                    "Parts": {
                        "type": "integer",
                        "example": 2
                    },
                    "ContentType": {
                        "type": "string",
                        "example": "application/pdf"
                    },
                    "fileVersionNumber": {
                        "type": "integer",
                        "example": 1
                    }
                },
                "required": [
                    "Id",
                    "Parts",
                    "ContentType"
                ]
            },
            "MultipartFilesPostRequest": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "Name": {
                            "type": "string",
                            "example": "name-of-file.png"
                        },
                        "Parts": {
                            "type": "integer",
                            "example": 2
                        },
                        "litify_docs__Author__c": {
                            "type": "string",
                            "example": "Gary"
                        },
                        "litify_docs__Description__c": {
                            "type": "string",
                            "example": "Description of file"
                        },
                        "litify_docs__External_File_Path__c": {
                            "type": "string",
                            "example": "files/path"
                        },
                        "litify_docs__External_ID__c": {
                            "type": "string",
                            "example": "123abc"
                        },
                        "litify_docs__Folder_Path__c": {
                            "type": "string",
                            "example": "[\r\n                                    \"Emails\",\r\n                                    \"Bills\"\r\n                                ]"
                        },
                        "litify_docs__From__c": {
                            "type": "string",
                            "example": "From"
                        },
                        "litify_docs__To__c": {
                            "type": "string",
                            "example": "To"
                        },
                        "litify_docs__Related_To_Api_Name__c": {
                            "type": "string",
                            "example": "litify_pm__Matter__c"
                        },
                        "litify_docs__Related_To__c": {
                            "type": "string",
                            "example": "a0U1U000001NvetUAC"
                        },
                        "litify_docs__File_Type__c": {
                            "type": "string",
                            "example": "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
                        }
                    },
                    "required": [
                        "Name",
                        "Parts",
                        "litify_docs__File_Type__c"
                    ]
                }
            },
            "MultipartFilesPostResponse": {
                "type": "object",
                "properties": {
                    "name-of-file.png": {
                        "$ref": "#/components/schemas/MultipartSignedUrlObject"
                    }
                }
            },
            "MultipartFilesPutResponse": {
                "type": "object",
                "properties": {
                    "name-of-file.png": {
                        "$ref": "#/components/schemas/MultipartSignedUrlObject"
                    }
                }
            },
            "MultipartFilesCompletePostRequest": {
                "type": "object",
                "properties": {
                    "Ids": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "a1E1U000001juz6UAA"
                        }
                    },
                    "a1E1U000001juz6UAA": {
                        "type": "object",
                        "properties": {
                            "UploadId": {
                                "type": "string",
                                "example": "j4V..MisuU8WHb5Yo2_zJSSc928jE8j6KlLXXo8r0En_WI2H_pflujEkzkh6EaUzoAkm_oWk046gmPnnow2ymik2dgE7qFB2ZR6VqqXTwePs6D588SnP_cf8IIZ75UvcJtHOOtkx3xp1UVxXCmmeNeu1iZAYgNS6m6hl1Ce42j8W4zatubY3KZlVeGKtwq.4Ry_Pjn4dlSHJ3wKATpAubw--"
                            },
                            "Parts": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "PartNumber": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "ETag": {
                                            "type": "string",
                                            "example": "a41d8cd98f00b204e9800998ecf8427e"
                                        }
                                    },
                                    "required": [
                                        "PartNumber",
                                        "ETag"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "UploadId",
                            "Parts"
                        ]
                    }
                },
                "required": [
                    "Ids",
                    "a1E1U000001juz6UAA"
                ]
            },
            "MultipartFilesCompletePostResponse": {
                "type": "object",
                "properties": {
                    "Message": {
                        "type": "string",
                        "example": "Files successfully uploaded."
                    },
                    "Successes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MultipartFileRecordObject"
                        }
                    },
                    "Failures": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "a1E1U000001juz6UAA"
                        }
                    }
                }
            },
            "MultipartRefreshUrlsPutResponse": {
                "type": "object",
                "properties": {
                    "name-of-file.png": {
                        "$ref": "#/components/schemas/MultipartSignedUrlObject"
                    }
                }
            },
            "MultipartFilesRefreshPutRequest": {
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "string",
                        "example": "a1E1U000001juz6UAA"
                    },
                    "UploadId": {
                        "type": "string",
                        "example": "pvnNMb5nPMuL41IDZmICKpNAMXtoQ4h2GmkMJPvLqv7WKj9we1v72BIlyew_leH_zPebbIztzwV6DX9chYnxFfr.t4iakhH4KLEFeDXh9TXIYTIG4BKROsIfbg8MjT9dLC6uu5XVNeXuDp5B7VBQf.sEakD28K8u33GsEOPiXP080Rn...d6NBnTuxDltSePWJgbHdlCIYj3gTuDMOSFcA--"
                    },
                    "StartIndex": {
                        "type": "integer",
                        "example": 0
                    },
                    "EndIndex": {
                        "type": "integer",
                        "example": 2
                    }
                },
                "required": [
                    "Id",
                    "UploadId",
                    "EndIndex"
                ]
            },
            "MultipartFilesRefreshPutResponse": {
                "type": "object",
                "properties": {
                    "Message": {
                        "type": "string",
                        "example": "Files successfully uploaded."
                    },
                    "Successes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MultipartFileRecordObject"
                        }
                    },
                    "Failures": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "a1E1U000001juz6UAA"
                        }
                    }
                }
            },
            "FilesAssociatePostRequest": {
                "type": "object",
                "properties": {
                    "fileRelationships": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "fileOne": {
                                    "type": "string"
                                },
                                "fileTwo": {
                                    "type": "string"
                                }
                            }
                        },
                        "example": [
                            {
                                "fileOne": "a1BJ0000005DHwAMAW",
                                "fileTwo": "a1BJ0000005DHwFMAW"
                            },
                            {
                                "fileOne": "a1BJ0000005DHwDMAW",
                                "fileTwo": "a1BJ0000005DHwZMAW"
                            }
                        ]
                    },
                    "relationshipType": {
                        "type": "string",
                        "example": "Docrio Email"
                    }
                }
            },
            "FilesAssociatePostResponse": {
                "type": "object",
                "properties": {
                    "Message": {
                        "type": "string",
                        "example": "Success"
                    }
                }
            },
            "FilesAssociateDeleteRequest": {
                "type": "object",
                "properties": {
                    "fileRelationships": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "fileOne": {
                                    "type": "string"
                                },
                                "fileTwo": {
                                    "type": "string"
                                }
                            }
                        },
                        "example": [
                            {
                                "fileOne": "a1BJ0000005DHwAMAW",
                                "fileTwo": "a1BJ0000005DHwFMAW"
                            },
                            {
                                "fileOne": "a1BJ0000005DHwDMAW",
                                "fileTwo": "a1BJ0000005DHwZMAW"
                            }
                        ]
                    }
                }
            },
            "FilesCompletePostRequest": {
                "type": "object",
                "properties": {
                    "Ids": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "a1E1U000001juz6UAA"
                        }
                    },
                    "CheckIn": {
                        "type": "boolean",
                        "example": true
                    }
                }
            },
            "FilesCompletePostResponse": {
                "type": "object",
                "properties": {
                    "Message": {
                        "type": "string",
                        "example": "Files successfully uploaded."
                    },
                    "Successes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FileRecordObject"
                        }
                    },
                    "Failures": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "a1E1U000001juz6UAA"
                        }
                    }
                }
            },
            "FilesRelatedGetResponse": {
                "type": "object",
                "properties": {
                    "Records": {
                        "$ref": "#/components/schemas/FileRecordObject"
                    },
                    "NextBatch": {
                        "$ref": "#/components/schemas/NextBatchObject"
                    }
                }
            },
            "FilesToggleRequest": {
                "type": "object",
                "description": "Array of salesforce file Ids.",
                "properties": {
                    "Ids": {
                        "description": "salesforce file Id",
                        "type": "array",
                        "example": [
                            "a085e0000013x5d",
                            "a085e0000013x5f"
                        ],
                        "items": {
                            "type": "string",
                            "example": "a085e0000013x5d"
                        }
                    }
                }
            },
            "FilesToggleResponse": {
                "type": "object",
                "properties": {
                    "Message": {
                        "type": "string",
                        "example": "Success"
                    }
                }
            },
            "FilesCombineRequest": {
                "type": "object",
                "properties": {
                    "relatedToApiName": {
                        "type": "string",
                        "example": "a1E1U000001juz6UAA"
                    },
                    "fileRelatedTo": {
                        "type": "string",
                        "example": "a0X1k000003CgUhEAK"
                    },
                    "fileName": {
                        "type": "string",
                        "example": "CombinePDF.pdf"
                    },
                    "folderPath": {
                        "type": "string",
                        "example": "[folder]"
                    },
                    "combineFiles": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "fileInfoId": {
                                    "type": "string"
                                },
                                "fileType": {
                                    "type": "string"
                                }
                            }
                        },
                        "example": [
                            {
                                "fileType": "application/pdf",
                                "name": "MyPDF.pdf",
                                "fileInfoId": "a141k000002opZ4AAI"
                            },
                            {
                                "fileType": "application/msdoc",
                                "name": "MySecondPDF.pdf",
                                "fileInfoId": "a141k000002opZ8CQQ"
                            }
                        ]
                    }
                }
            },
            "FilesSplitRequest": {
                "type": "object",
                "properties": {
                    "originalFileId": {
                        "type": "string",
                        "example": "a141700000As4yuAAB"
                    },
                    "originalFileRelatedTo": {
                        "type": "string",
                        "example": "a141700000As4yuAAB"
                    },
                    "originalFolderPath": {
                        "type": "string",
                        "example": "[]"
                    },
                    "relatedToApiName": {
                        "type": "string",
                        "example": "litify_pm__Matter__c"
                    },
                    "originalFileType": {
                        "type": "string",
                        "example": "application/pdf"
                    },
                    "sections": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "fileName": {
                                    "type": "string",
                                    "example": "pdfsplit1.pdf"
                                },
                                "pages": {
                                    "type": "array",
                                    "example": [
                                        1,
                                        2,
                                        3,
                                        4
                                    ]
                                },
                                "fileType": {
                                    "type": "string",
                                    "example": "application/pdf"
                                }
                            }
                        },
                        "example": [
                            {
                                "fileName": "pdfSplit1.pdf",
                                "pages": [
                                    1,
                                    2,
                                    4
                                ],
                                "fileType": "application/pdf"
                            },
                            {
                                "fileName": "pdfSplit2.pdf",
                                "pages": [
                                    5,
                                    7,
                                    8
                                ],
                                "fileType": "application/pdf"
                            }
                        ]
                    }
                }
            },
            "FilesCombineResponse": {
                "type": "object",
                "properties": {
                    "Name": {
                        "type": "string",
                        "example": "CombinedPDF.pdf"
                    },
                    "Id": {
                        "type": "string",
                        "example": "a141k000002otJIAAY"
                    },
                    "litify_docs__File_Type__c": {
                        "type": "string",
                        "example": "application/pdf"
                    }
                },
                "example": {
                    "Name": "CombinePDF.pdf",
                    "Id": "a141k000002otJIAAY",
                    "litify_docs__File_Type__c": "application/pdf"
                }
            },
            "FilesCombineCompleteRequest": {
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "string",
                        "example": "a141k000002otJIAAY"
                    }
                }
            },
            "FilesCombineCompleteResponse": {
                "type": "object",
                "properties": {
                    "Errors": {
                        "type": "object",
                        "example": {
                            "a141k000002otJIAAY": "File Id is not found"
                        }
                    },
                    "Statuses": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "expirationTime": {
                                    "type": "int",
                                    "example": 1628612697
                                },
                                "jobId": {
                                    "type": "string",
                                    "example": "a141k000002otJIAAY"
                                },
                                "status": {
                                    "type": "string",
                                    "example": "COMPLETED"
                                }
                            }
                        }
                    }
                }
            },
            "FilesSplitResponse": {
                "type": "object",
                "properties": {
                    "fileInfoRecords": {
                        "type": "array",
                        "example": [
                            {
                                "name": "pdfSplit1.pdf",
                                "id": "a14110000059GLiAAM",
                                "litify_docs__File_Type__c": "application/pdf",
                                "pages": [
                                    1,
                                    2,
                                    3
                                ]
                            }
                        ]
                    }
                }
            },
            "FilesSplitCompleteRequest": {
                "type": "object",
                "properties": {
                    "Ids": {
                        "type": "array",
                        "example": [
                            "a14110000059GOyAAM"
                        ]
                    }
                }
            },
            "FilesSplitCompleteResponse": {
                "type": "object",
                "properties": {
                    "Errors": {
                        "type": "object",
                        "example": {
                            "a14110000059GLiAAM": "Cannot find file"
                        }
                    },
                    "Statuses": {
                        "type": "array",
                        "example": [
                            {
                                "expirationTime": 1627657825,
                                "jobId": "a14110000059GKnAAM",
                                "status": "COMPLETED"
                            }
                        ]
                    }
                }
            },
            "ErrorMessageResponse": {
                "type": "object",
                "properties": {
                    "Message": {
                        "type": "string",
                        "example": "Message describing error"
                    }
                }
            },
            "ErrorMessageResponseWithFailReason": {
                "type": "object",
                "properties": {
                    "Message": {
                        "type": "string",
                        "example": "Message describing error"
                    },
                    "FailReason": {
                        "type": "string",
                        "example": "UNAUTHORIZED"
                    }
                }
            },
            "ExternalLinkPostRequest": {
                "type": "object",
                "properties": {
                    "FileInfoRecords": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FileRecordObject"
                        }
                    },
                    "FileLinkRecord": {
                        "type": "object",
                        "properties": {
                            "litify_docs__Expiration_Date__c": {
                                "type": "string",
                                "example": "2020-12-31"
                            },
                            "litify_docs__File_Size__c": {
                                "type": "integer",
                                "example": 11687
                            },
                            "litify_docs__File_Type__c": {
                                "type": "string",
                                "example": "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
                            },
                            "litify_docs__Password__c": {
                                "type": "string",
                                "example": "password"
                            },
                            "litify_docs__Unique_Id__c": {
                                "type": "string",
                                "example": "unique_id_here_123"
                            }
                        }
                    }
                }
            },
            "ExternalLinkPostResponse": {
                "type": "object",
                "properties": {
                    "CreatedByName": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "OrganizationName": {
                        "type": "string",
                        "example": "ABC Corp"
                    },
                    "Records": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "Id": {
                                    "type": "string",
                                    "example": "id_54321"
                                },
                                "litify_docs__Unique_Id__c": {
                                    "type": "string",
                                    "example": "uuid_12345"
                                },
                                "litify_docs__Password__c": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "litify_docs__Expiration_Date__c": {
                                    "type": "string",
                                    "example": "2020-12-31"
                                }
                            }
                        }
                    }
                }
            },
            "ExternalLinkDownloadResponse": {
                "type": "object",
                "properties": {
                    "FileId": {
                        "type": "string",
                        "example": "https://prefix.amazonaws.com/bucket/file"
                    }
                }
            },
            "ExternalLinkPreviewResponse": {
                "type": "object",
                "properties": {
                    "SignedUrl": {
                        "type": "string",
                        "example": "https://prefix.amazonaws.com/bucket/file"
                    },
                    "Expires": {
                        "type": "string",
                        "example": "2019-07-16T16:55:55.717Z"
                    }
                }
            },
            "ExternalLinkGetResponse": {
                "type": "object",
                "properties": {
                    "Expires": {
                        "type": "string",
                        "example": "2020-12-31"
                    },
                    "SharedBy": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "OrgName": {
                        "type": "string",
                        "example": "Litify"
                    },
                    "Records": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "Id": {
                                    "type": "string",
                                    "example": "a111g000002DR3lAAG"
                                },
                                "Size": {
                                    "type": "integer",
                                    "example": 345606
                                },
                                "MimeType": {
                                    "type": "string",
                                    "example": "application/pdf"
                                },
                                "Name": {
                                    "type": "string",
                                    "example": "test_document.docx"
                                }
                            }
                        }
                    },
                    "FolderReference": {
                        "type": "object",
                        "properties": {
                            "a1D52000001Thq9EAC": {
                                "type": "object",
                                "properties": {
                                    "files": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "Id": {
                                                    "type": "string",
                                                    "example": "a111g000002DR3lAAG"
                                                },
                                                "Size": {
                                                    "type": "integer",
                                                    "example": 345606
                                                },
                                                "MimeType": {
                                                    "type": "string",
                                                    "example": "application/pdf"
                                                },
                                                "Name": {
                                                    "type": "string",
                                                    "example": "test_document.docx"
                                                }
                                            }
                                        }
                                    },
                                    "folders": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "Id": {
                                                    "type": "string",
                                                    "example": "a111g000002DR3lAAG_Folder"
                                                },
                                                "Size": {
                                                    "type": "integer",
                                                    "nullable": true,
                                                    "example": null
                                                },
                                                "MimeType": {
                                                    "type": "string",
                                                    "example": "inode/directory"
                                                },
                                                "Name": {
                                                    "type": "string",
                                                    "example": "Folder1"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "ExternalLinkZipStatusResponse": {
                "type": "object",
                "properties": {
                    "ZipFileId": {
                        "type": "string",
                        "example": "76257fe3-872f-4ddc-9c42-852446a3e482"
                    },
                    "Status": {
                        "type": "string",
                        "example": "COMPLETED"
                    },
                    "SignedUrl": {
                        "type": "string",
                        "example": "https://prefix.amazonaws.com/bucket/files.zip"
                    }
                }
            },
            "ExternalLinkDeleteResponse": {
                "type": "object",
                "properties": {
                    "Successes": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "a111g000002DR3lAAG"
                        }
                    },
                    "Failures": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "a111g000002DR3lAAG"
                        }
                    }
                }
            },
            "ExternalLinkZipRequest": {
                "type": "object",
                "properties": {
                    "FileIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "a111g000002DR3lAAG"
                        }
                    },
                    "FileIdsWithFolderPath": {
                        "type": "object",
                        "properties": {
                            "files": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": "a1D52000001Thq9EAC"
                                }
                            },
                            "filePathReference": {
                                "type": "object",
                                "properties": {
                                    "a1D52000001Thq9EAC": {
                                        "type": "string",
                                        "example": "Folder2"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "ExternalLinkZipResponse": {
                "type": "object",
                "properties": {
                    "ZipFileId": {
                        "type": "string",
                        "example": "5abcc048-5308-4fbc-b652-a96a74b71af4"
                    },
                    "Status": {
                        "type": "string",
                        "example": "PROCESSING"
                    }
                }
            },
            "ArchivePostRequest": {
                "type": "object",
                "properties": {
                    "FileInfoIds": {
                        "type": "array",
                        "example": [
                            "a111g000002DR3lAAG",
                            "a111g000002DR3lAAG"
                        ]
                    },
                    "RecordIds": {
                        "type": "array",
                        "example": [
                            "a0x32g000002DR3lAAB",
                            "a111g000002DR3lAAG"
                        ]
                    }
                }
            },
            "ArchivePostResponse": {
                "type": "object",
                "properties": {
                    "externalJobId": {
                        "type": "string",
                        "example": "8abcc048-5308-4fbc-b652-a34a86t09af4"
                    }
                }
            },
            "ArchiveStatusGetResponse": {
                "type": "object",
                "properties": {
                    "externalJobId": {
                        "type": "string",
                        "example": "8abcc048-5308-4fbc-b652-a34a86t09af4"
                    },
                    "status": {
                        "type": "string",
                        "example": "COMPLETE"
                    },
                    "results": {
                        "type": "string",
                        "example": "https://prefix.amazonaws.com/bucket/archive-job-results"
                    }
                }
            },
            "FilesShareRequest": {
                "type": "object",
                "properties": {
                    "Ids": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "a111g000002DR3lAAG"
                        }
                    },
                    "share": {
                        "type": "boolean",
                        "example": true
                    }
                }
            },
            "FilesRestoreResponse": {
                "type": "object",
                "properties": {
                    "Successes": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "a111g000002DR3lAAG"
                        }
                    },
                    "Failures": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "a111g000002DR3lAAG"
                        }
                    }
                }
            },
            "TextContentPostResponse": {
                "type": "object",
                "properties": {
                    "SignedUrl": {
                        "type": "string",
                        "example": "https://prefix.amazonaws.com/bucket/file"
                    }
                }
            },
            "HistoryRecordObject": {
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "string",
                        "example": "a1E1U000001juz6UAA"
                    },
                    "OwnerId": {
                        "type": "string",
                        "example": "a1E1U000001juz6UAA"
                    },
                    "IsDeleted": {
                        "type": "boolean",
                        "example": false
                    },
                    "Name": {
                        "type": "string",
                        "example": "Name of file"
                    },
                    "CreatedDate": {
                        "type": "string",
                        "example": "2019-07-15T20:06:25.000+0000"
                    },
                    "CreatedById": {
                        "type": "string",
                        "example": "a1E1U000001juz6UAA"
                    },
                    "LastModifiedDate": {
                        "type": "string",
                        "example": "2019-07-15T20:06:25.000+0000"
                    },
                    "LastModifiedById": {
                        "type": "string",
                        "example": "a1E1U000001juz6UAA"
                    },
                    "SystemModstamp": {
                        "type": "string",
                        "example": "2019-07-15T20:06:25.000+0000"
                    },
                    "LastViewedDate": {
                        "type": "string",
                        "example": "2019-07-15T20:06:25.000+0000"
                    },
                    "LastReferencedDate": {
                        "type": "string",
                        "example": "2019-07-15T20:06:25.000+0000"
                    },
                    "litify_docs__File_Info__c": {
                        "type": "string",
                        "example": "a1E1U000001juz6UAA"
                    },
                    "litify_docs__File_Info__c__User__c": {
                        "type": "string",
                        "example": "2251U000002P9AAAAA"
                    },
                    "litify_docs__File_Info__c__Date__c": {
                        "type": "string",
                        "example": "2019-07-15T20:06:25.000+0000"
                    },
                    "litify_docs__File_Info__c__Action__c": {
                        "type": "string",
                        "example": "Versioned"
                    }
                }
            },
            "FolderStructureObject": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Folder"
                    },
                    "subfolders": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "example": "Folder"
                                },
                                "subfolders": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "NextBatchObject": {
                "type": "object",
                "properties": {
                    "OffsetId": {
                        "type": "string",
                        "example": "a1E1U000001juz6UAA"
                    },
                    "OffsetValue": {
                        "type": "string",
                        "example": "File.pdf"
                    }
                }
            },
            "FileRecordObject": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "example": "litify_docs__File_Info__c"
                            },
                            "url": {
                                "type": "string",
                                "example": "/services/path/to/object/litify_docs__File_Info__c/a1E1U000001juz6UAA"
                            }
                        }
                    },
                    "Id": {
                        "type": "string",
                        "example": "a1E1U000001juz6UAA"
                    },
                    "OwnerId": {
                        "type": "string",
                        "example": "a1E1U000001juz6UAA"
                    },
                    "IsDeleted": {
                        "type": "boolean",
                        "example": false
                    },
                    "Name": {
                        "type": "string",
                        "example": "Name of file"
                    },
                    "CreatedDate": {
                        "type": "string",
                        "example": "2019-07-15T20:06:25.000+0000"
                    },
                    "CreatedById": {
                        "type": "string",
                        "example": "a1E1U000001juz6UAA"
                    },
                    "LastModifiedDate": {
                        "type": "string",
                        "example": "2019-07-15T20:06:25.000+0000"
                    },
                    "LastModifiedById": {
                        "type": "string",
                        "example": "a1E1U000001juz6UAA"
                    },
                    "LastReferencedDate": {
                        "type": "string",
                        "example": "2019-07-15T20:06:25.000+0000"
                    },
                    "LastViewedDate": {
                        "type": "string",
                        "example": "2019-07-15T20:06:25.000+0000"
                    },
                    "SystemModstamp": {
                        "type": "string",
                        "example": "2019-07-15T20:06:25.000+0000"
                    },
                    "litify_docs__Author__c": {
                        "type": "string",
                        "example": "Gary"
                    },
                    "litify_docs__Description__c": {
                        "type": "string",
                        "example": "Description of file"
                    },
                    "litify_docs__External_File_Path__c": {
                        "type": "string",
                        "example": "files/path"
                    },
                    "litify_docs__External_ID__c": {
                        "type": "string",
                        "example": "123abc"
                    },
                    "litify_docs__Folder_Path__c": {
                        "type": "string",
                        "example": "[\r\n                                \"Emails\",\r\n                                \"Bills\"\r\n                            ]"
                    },
                    "litify_docs__From__c": {
                        "type": "string",
                        "example": "From"
                    },
                    "litify_docs__To__c": {
                        "type": "string",
                        "example": "To"
                    },
                    "litify_docs__Latest_Version__c": {
                        "type": "string",
                        "example": 0
                    },
                    "litify_docs__Complete__c": {
                        "type": "boolean",
                        "example": true
                    },
                    "litify_docs__File_Link__c": {
                        "type": "string",
                        "example": "/lightning/n/litify_docs__File_Details?c__id=a1E1U000002XOtC"
                    },
                    "litify_docs__Related_To_Api_Name__c": {
                        "type": "string",
                        "example": "litify_pm__Matter__c"
                    },
                    "litify_docs__File_Type__c": {
                        "type": "string",
                        "example": "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
                    },
                    "litify_docs__File_Size__c": {
                        "type": "integer",
                        "example": 11687
                    },
                    "litify_docs__Related_To__c": {
                        "type": "string",
                        "example": "a0U1U000001NvetUAC"
                    },
                    "Duplicates": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "File version ID for a duplicate file found"
                        }
                    },
                    "Checksum": {
                        "type": "string",
                        "description": "Checksum calculated based on file content"
                    }
                }
            },
            "MultipartFileRecordObject": {
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "string",
                        "example": "a1E1U000001juz6UAA"
                    },
                    "OwnerId": {
                        "type": "string",
                        "example": "a1E1U000001juz6UAA"
                    },
                    "IsDeleted": {
                        "type": "boolean",
                        "example": false
                    },
                    "Name": {
                        "type": "string",
                        "example": "Name of file"
                    },
                    "CreatedDate": {
                        "type": "string",
                        "example": "2019-07-15T20:06:25.000+0000"
                    },
                    "CreatedById": {
                        "type": "string",
                        "example": "a1E1U000001juz6UAA"
                    },
                    "LastModifiedDate": {
                        "type": "string",
                        "example": "2019-07-15T20:06:25.000+0000"
                    },
                    "LastModifiedById": {
                        "type": "string",
                        "example": "a1E1U000001juz6UAA"
                    },
                    "SystemModstamp": {
                        "type": "string",
                        "example": "2019-07-15T20:06:25.000+0000"
                    },
                    "litify_docs__Complete__c": {
                        "type": "boolean",
                        "example": true
                    },
                    "litify_docs__File_Link__c": {
                        "type": "string",
                        "example": "/lightning/n/litify_docs__File_Details?c__id=a1E1U000002XOtC"
                    },
                    "litify_docs__File_Type__c": {
                        "type": "string",
                        "example": "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
                    },
                    "litify_docs__Folder_Path_First_255__c": {
                        "type": "string",
                        "example": "[\r\n                                \"Emails\",\r\n                                \"Bills\"\r\n                            ]"
                    },
                    "litify_docs__Folder_Path_Last_255__c": {
                        "type": "string",
                        "example": "[\r\n                                \"Emails\",\r\n                                \"Bills\"\r\n                            ]"
                    },
                    "litify_docs__Folder_Path__c": {
                        "type": "string",
                        "example": "[\r\n                                \"Emails\",\r\n                                \"Bills\"\r\n                            ]"
                    },
                    "litify_docs__Latest_Version_Formula__c": {
                        "type": "integer",
                        "example": 0
                    },
                    "litify_docs__OCR_Compatible__c": {
                        "type": "boolean",
                        "example": false
                    },
                    "litify_docs__Related_To_Api_Name__c": {
                        "type": "string",
                        "example": "Account"
                    },
                    "litify_docs__Related_To__c": {
                        "type": "string",
                        "example": "0018b00002122C6AAI"
                    },
                    "litify_docs__Latest_Version__c": {
                        "type": "integer",
                        "example": 0
                    },
                    "litify_docs__Updated_By__c": {
                        "type": "string",
                        "example": "0058b00000G9n6TAAR"
                    },
                    "litify_docs__Updated_On__c": {
                        "type": "string",
                        "example": "2023-07-14T14:27:58.755Z"
                    },
                    "litify_docs__Updated_By_Name__c": {
                        "type": "string",
                        "example": "Ed Kim"
                    },
                    "litify_docs__Delete__c": {
                        "type": "boolean",
                        "example": false
                    },
                    "litify_docs__Has_Attachments_Legacy__c": {
                        "type": "boolean",
                        "example": false
                    },
                    "litify_docs__File_Size__c": {
                        "type": "integer",
                        "example": 1169360522
                    },
                    "litify_docs__Source__c": {
                        "type": "string",
                        "example": "Docrio Api"
                    },
                    "litify_docs__Version_Id__c": {
                        "type": "string",
                        "example": null
                    },
                    "Duplicates": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "File version ID for a duplicate file found"
                        }
                    },
                    "Checksum": {
                        "type": "string",
                        "description": "Checksum calculated based on file content"
                    }
                }
            },
            "SignedUrlObject": {
                "type": "object",
                "properties": {
                    "SignedUrl": {
                        "type": "string",
                        "example": "https://prefix.amazonaws.com/bucket/file"
                    },
                    "Expires": {
                        "type": "string",
                        "example": "2019-07-16T16:55:55.717Z"
                    },
                    "Id": {
                        "type": "string",
                        "example": "a1E1U000001juz6UAA"
                    },
                    "FailReason": {
                        "type": "string",
                        "example": "PROCESSING"
                    },
                    "litify_docs__Related_To__c": {
                        "type": "string",
                        "example": "a0U1U000001NvetUAC"
                    },
                    "litify_docs__External_Id__c": {
                        "type": "string",
                        "example": "microsoft-timestamp"
                    }
                },
                "required": [
                    "SignedUrl",
                    "Expires",
                    "Id"
                ]
            },
            "MultipartSignedUrlObject": {
                "type": "object",
                "properties": {
                    "SignedUrls": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "https://prefix.amazonaws.com/bucket/file/part1"
                        }
                    },
                    "Expires": {
                        "type": "string",
                        "example": "2019-07-16T16:55:55.717Z"
                    },
                    "Id": {
                        "type": "string",
                        "example": "a1E1U000001juz6UAA"
                    },
                    "UploadId": {
                        "type": "string",
                        "example": "WytmJ8oM75Kf9.5HTJJ_3BKlvXZtxlqgbB1HesRcIS0MH1Hbx0xtJRJ9zm6tXHwun26NKGmvAnWFBqv5gmNfLaHof8OwHm_.iK1xnJ7XFxV7123yq5mFMaGUF.0yklj3Cl2CAG2E.eCgr7803B2iYW2cfQSizrGkLnqOhGHn_Hi2WVSIvEbauXeuCrq9sbF.C52WgWIZlFgU4eOWUvcdAA--"
                    }
                },
                "required": [
                    "SignedUrls",
                    "Expires",
                    "Id",
                    "UploadId"
                ]
            }
        }
    }
}